"""Change invalidate_before to BIGINT

Revision ID: 2c98eb1f9c97
Revises: 0ad3cfb2d80f
Create Date: 2025-04-17 16:03:29.538610

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2c98eb1f9c97'
down_revision: Union[str, None] = '0ad3cfb2d80f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user") as batch_op:
        batch_op.alter_column("invalidate_before", server_default=None)
    with op.batch_alter_table("user") as batch_op:
        batch_op.alter_column(
            "invalidate_before",
            existing_type=sa.TIMESTAMP(timezone=True),
            type_=sa.BigInteger(),
            postgresql_using="EXTRACT(EPOCH FROM invalidate_before)::bigint"
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user") as batch_op:
        batch_op.alter_column(
            "invalidate_before",
            existing_type=sa.BigInteger(),
            type_=sa.TIMESTAMP(timezone=True),
            postgresql_using="to_timestamp(invalidate_before)"
        )
    # ### end Alembic commands ###
